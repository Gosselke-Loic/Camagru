services:
  nginx:
    image: nginx_reverse
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    restart: unless-stopped
    ports:
      - "2000:80"
    depends_on:
      - nodeapp
    volumes:
      - uploads:/usr/share/nginx/html/uploads

  nodeapp:
    image: nodeapp
    build: ./backend
    restart: unless-stopped
    env_file:
      - ./.env
    expose:
      - 8080
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads:/home/node/app/uploads

  db:
    image: postgresdb
    build:
      context: ./database
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p ${POSTGRES_PORT} -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  uploads:
    driver_opts:
      type: none
      o: bind
      device: ./uploads